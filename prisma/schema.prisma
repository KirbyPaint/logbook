// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum PrimeLogDataCategory {
  PIRATE_DATA  @map("Pirate Data")
  CHOZO_LORE   @map("Chozo Lore")
  CREATURES    @map("Creatures")
  RESEARCH     @map("Research")
  ARTIFACTS    @map("Artifacts")
  LORE         @map("Lore")
}

model Prime1Log {
  id            String               @id @default(uuid())
  createdAt     DateTime             @default(now())
  logCategory   PrimeLogDataCategory
  entry         String
  firstLocation String?
  entryText     String
  limitedScan   Boolean?
  notes         String?
  image         String?
  User          User[]               @relation(fields: [userId], references: [id])
  userId        String?
}

model Prime2Log {
  id            String               @id @default(uuid())
  createdAt     DateTime             @default(now())
  logCategory   PrimeLogDataCategory
  entry         String
  firstLocation String
  entryText     String
  limitedScan   Boolean?
  notes         String?
  image         String?
  majorCategory String?
  minorCategory String?
  subCategory   String?
  User          User[]               @relation(fields: [userId], references: [id])
  userId        String?
}

model Prime3Log {
  id            String               @id @default(uuid())
  createdAt     DateTime             @default(now())
  logCategory   PrimeLogDataCategory
  entry         String
  firstLocation String
  entryText     String
  limitedScan   Boolean?
  notes         String?
  image         String?
  majorCategory String?
  User          User[]               @relation(fields: [userId], references: [id])
  userId        String?
}

model User {
  id           String      @id @default(uuid())
  email        String      @unique
  name         String?
  username     String      @unique
  password     String
  Prime1Log    Prime1Log[] @relation(fields: [Prime1LogIds], references: [id])
  Prime1LogIds String?
  Prime2Log    Prime2Log[] @relation(fields: [Prime2LogIds], references: [id])
  Prime2LogIds String?
  Prime3Log    Prime3Log[] @relation(fields: [Prime3LogIds], references: [id])
  Prime3LogIds String?
}

// model LogsOnUsers {
//   id          String   @id @default(uuid())
//   userId      String   @unique
//   Prime1LogId String
//   Prime2LogId String
//   Prime3LogId String
//   scannedOn   DateTime @default(now())
// }
